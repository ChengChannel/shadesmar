name: C/C++ CI

on: [push, pull_request]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++, clang++]
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install libboost-all-dev libmsgpack-dev ninja-build
        ./install_deps.sh
    - name: Configure
      env:
        CXX: ${{ matrix.compiler }}
      run: ./configure
    - name: Build
      run: cmake --build build
    - name: Binary pubsub test
      run: ./build/pubsub_bin_test
    - name: Serialized pubsub test
      run: ./build/pubsub_test
    - name: Dragons test
      run: |
        ./build/dragons_test
        ./build/dragons_bench

  build-macos:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        brew update
        brew install boost msgpack ninja
        ./install_deps.sh
    - name: Configure
      run: ./configure
    - name: Build
      run: cmake --build build
    - name: Binary pubsub test
      run: ./build/pubsub_bin_test
    - name: Serialized pubsub test
      run: ./build/pubsub_test
    - name: Dragons memory test
      run: ./build/dragons_test

  lint-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - run: pip install cpplint
      - run: cpplint --filter=-build/c++11,-build/include_subdir --exclude="include/catch.hpp" --exclude="build/*" --recursive .

  single-header-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install libboost-all-dev libmsgpack-dev ninja-build
        ./install_deps.sh
        pip3 install -r simul/requirements.txt
    - name: Generate single header
      run: python3 simul/simul.py
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DSINGLE_H=ON ..
    - name: Build
      run: cmake --build build
